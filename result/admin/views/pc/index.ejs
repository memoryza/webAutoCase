<!DOCTYPE html>
<html>
<head>
  <title>后台首页</title>
  <!-- 新 Bootstrap 核心 CSS 文件 -->
  <link rel="stylesheet" href="stylesheets/bootstrap.min.css">
  <!-- 可选的Bootstrap主题文件（一般不用引入） -->
  <link rel="stylesheet" href="stylesheets/bootstrap-theme.min.css">
  <style>
    .sidebar {
    position: fixed;
      top: 51px;
      bottom: 0;
      left: 0;
      z-index: 1000;
      display: block;
      padding: 20px;
      overflow-x: hidden;
      overflow-y: auto;
      background-color: #f5f5f5;
      border-right: 1px solid #eee;
    }
    /* Sidebar navigation */
    .nav-sidebar {
    margin-right: -21px; /* 20px padding + 1px border */
    margin-bottom: 20px;
    margin-left: -20px;
    }
    .nav-sidebar > li > a {
    padding-right: 20px;
    padding-left: 20px;
    }
    .nav-sidebar > .active > a,
    .nav-sidebar > .active > a:hover,
    .nav-sidebar > .active > a:focus {
    color: #fff;
    background-color: #428bca;
    }
    .text-time {
      color: #777;
      font-size: 14px;
      transition: color .5s ease-in;
    }
    .update {
      color:  #F00;
    }
  </style>
<body>
  <nav class="navbar navbar-inverse navbar-fixed-top">
    <div class="container-fluid">
    <div class="navbar-header">
          <a class="navbar-brand" href="/admin/">webmonitor后台</a>
        </div>
    </div>
  </nav>
  <div class="container-fluid">
    <div class="row">
      <div class="col-sm-3 col-md-2 sidebar">
        <ul class="nav nav-sidebar">
          <li class="active"><a href="/">主视窗</a></li>
          <li><a href="/case_group">case组</a></li>
        </ul>
      </div>
      <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main" style="margin-top:30px">
        <h1 class="page-header">服务器状态<span class="text-time">(更新于<%=time%>)</span></h1>
        <div class="row placeholders">
        <div class="col-xs-6 col-sm-3 placeholder">
          <h4>服务器系统</h4>
          <span class="text-muted"><%=platform%></span>
        </div>
        <div class="col-xs-6 col-sm-3 placeholder">
          <h4>系统版本</h4>
          <span class="text-muted"><%=osVersion%></span>
        </div>
        <div class="col-xs-6 col-sm-3 placeholder">
          <h4>系统架构</h4>
          <span class="text-muted"><%=osArch%></span>
        </div>
        <div class="col-xs-6 col-sm-3 placeholder">
          <h4>当前用户</h4>
          <span class="text-muted"><%=osUser%></span>
        </div>
        <div class="col-xs-6 col-sm-3 placeholder">
          <h4>cpu数</h4>
          <span class="text-muted"><%=cpus%></span>
        </div>
        <div class="col-xs-6 col-sm-3 placeholder">
          <h4>剩余内存</h4>
          <span class="text-muted free-mem"><%=freemem%></span>
        </div>
        <div class="col-xs-6 col-sm-3 placeholder">
          <h4>总计内存</h4>
          <span class="text-muted"><%=totalmem%></span>
        </div>
        <div class="col-xs-6 col-sm-3 placeholder">
          <h4>mysql状态</h4>
          <span class="text-muted mysql-ping"><%=mysqlping%></span>
        </div>
        <div class="col-xs-6 col-sm-3 placeholder">
          <h4>服务器地址</h4>
          <span class="text-muted"><%=address%></span>
        </div>
        </div>
      </div>
    </div>
    </div>
  <!-- jQuery文件。务必在bootstrap.min.js 之前引入 -->
  <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script>

  <!-- 最新的 Bootstrap 核心 JavaScript 文件 -->
  <script src="javascripts/lib/bootstrap.min.js"></script>
  <script type="text/javascript">
  (function () {
    var updateTxt = {
      time: $('.text-time'),
      freemem: $('.free-mem'),
      mysqlPing: $('.mysql-ping')
    };

    var wss = (function() {
        var wsServer = 'ws://172.21.230.134:10000',
        wss = new WebSocket(wsServer);
        wss.binaryType = "arraybuffer";
        console.log(wss);
        wss.onopen = function() {
           console.log('open');
        }

        wss.onclose = function() {
          console.log('close');
        }
        /* 可以传送json和字符串还有二进制数据 */
        wss.onmessage = function(ev) {
          if (ev.data) {
            try {
              var data = JSON.parse(ev.data);
              updateTxt.time.addClass('update').text('(更新于' + data.time + ')');
              setTimeout(function (){
                updateTxt.time.removeClass('update');
              }, 1000);
              updateTxt.freemem.text(data.freemem);
              updateTxt.mysqlPing.text(data.mysqlping);
            } catch (e) {}
          }
          
        }
        wss.onerror = function(err) {
           console.log(err);
        }
        return wss;
    })();
  })()
   
  </script>
</head>
</body>
</html>